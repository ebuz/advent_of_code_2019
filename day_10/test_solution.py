import unittest

from Solution import tabulate_over_asteroids, analyze_map, calculate_angles

class TestSolution(unittest.TestCase):

    def test_analyze_map(self):
        inputs = ['.#..#\n.....\n#####\n....#\n...##', ]
        outputs = [(5,5,[(1,0),(4,0),(0,2),(1,2),(2,2),(3,2),(4,2),(4,3),(3,4),(4,4)]), ]
        for j,i in enumerate(inputs):
            self.assertEqual(analyze_map(i), outputs[j])

    def test_calculate_angles(self):
        inputs = [[(1,0),(4,0)], [(1,0),(2,1)], [(1,0),(0,1)], [(1,0),(0,3)], [(1,0),(5,3)]]
        outputs = [(0, 180), (45, 225), (135, 315), (108.43494882292201, 288.434948822922), (36.86989764584402, 216.86989764584402)]
        for j,i in enumerate(inputs):
            self.assertEqual(calculate_angles(*i), outputs[j])

    def test_tabulate_asteroids(self):
        inputs = ['.#..#\n.....\n#####\n....#\n...##',
                '......#.#.\n#..#.#....\n..#######.\n.#.#.###..\n.#..#.....\n..#....#.#\n#..#....#.\n.##.#..###\n##...#..#.\n.#....####',
                '#.#...#.#.\n.###....#.\n.#....#...\n##.#.#.#.#\n....#.#.#.\n.##..###.#\n..#...##..\n..##....##\n......#...\n.####.###.',
                '.#..#..###\n####.###.#\n....###.#.\n..###.##.#\n##.##.#.#.\n....###..#\n..#.#..#.#\n#..#.#.###\n.##...##.#\n.....#.#..',
                '.#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##'
                ]
        outputs = [((3,4), 8), ((5,8), 33), ((1,2), 35), ((6,3), 41), ((11,13), 210)]
        for j,i in enumerate(inputs):
            self.assertEqual(tabulate_over_asteroids(i), outputs[j])

if __name__ == '__main__':
    unittest.main(verbosity = 2)

